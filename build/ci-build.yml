name: $(date:yyyyMMdd)$(rev:rr)

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - arcus/*
    - docs/*
    - requirements.txt

pr:
  paths:
    include:
    - arcus/*
    - docs/*
    - tests/*
    - build/ci-build.yml
    - requirements.txt

resources:
  repositories:
    - repository: templates
      type: github
      name: arcus-azure/azure-devops-templates
      endpoint: arcus-azure

pool:
  vmImage: 'ubuntu-latest'


stages:
  - stage: BuildAndTest
    jobs: 
      - job: DefineVersion
        displayName: 'Increase and define version number'
        steps:
          - template: 'pypi/determine-pr-version.yml@templates'
            parameters:
              manualTriggerVersion: preview

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.7'
              addToPath: true
              architecture: 'x64'

          - task: Bash@3
            displayName: 'Update version number'
            inputs:
              targetType: 'inline'
              script: 'sed -i ''s/1.0.0/$(Package.Version).$(Build.BuildNumber)/g'' arcus/azureml/__init__.py'
              failOnStderr: true

      - job: Dependencies
        displayName: 'Install dependencies'
        steps:
          - script: python -m pip install --upgrade pip setuptools wheel lazydocs
            displayName: 'Install tools'

          - script: pip install -r requirements.txt
            displayName: 'Install requirements.txt'

          - script: python -m pip install --upgrade twine
            displayName: 'Install Twine'

      - job: UnitTests
        displayName: 'Run unit tests'
        steps:
          - script: |
              pip install pytest
              pip install pytest-cov
              pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html
            displayName: 'Unit tests (pytest)'

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: '**/test-*.xml'
              testRunTitle: 'Publish test results for Python $(python.version)'

          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
              reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

  - stage: PackageAndRelease
    displayName: 'Package and release to PyPi'
    dependsOn: UnitTests
    condition: succeeded()
    jobs:
      - job: PackageAndRelease
        displayName: 'Package and release'
        steps:
          - script: python -m pip install --upgrade pip setuptools wheel lazydocs
            displayName: 'Install tools'

          - script: |    
              python setup.py sdist bdist_wheel 
            displayName: 'Build wheels'

          - task: TwineAuthenticate@1
            inputs:
              pythonUploadServiceConnection: 'Arcus AzureML PyPi feed'

          - script: |
              python -m twine upload --skip-existing --verbose -r 'arcus-azureml' --config-file $(PYPIRC_PATH) dist/*
            displayName: 'Publish to PyPi dev'

          - task: CopyFiles@2  
            inputs:    
              targetFolder: $(Build.ArtifactStagingDirectory)

          - task: PublishBuildArtifacts@1  
            inputs:    
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'                  
              ArtifactName: 'dist'    
              publishLocation: 'Container'
